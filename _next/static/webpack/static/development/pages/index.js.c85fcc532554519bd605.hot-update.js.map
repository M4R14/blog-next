{"version":3,"file":"static/webpack/static/development/pages/index.js.c85fcc532554519bd605.hot-update.js","sources":["webpack:///./lib/posts.js"],"sourcesContent":["var fs = require('fs');\nvar path = require('path');\nconst matter = require('gray-matter');\nconst postsDirectory = path.join(process.cwd(), 'posts')\nconsole.log({postsDirectory})\n\nimport remark from 'remark'\nimport html from 'remark-html'\n\nexport function getAllPostIds() {\n    const fileNames = fs.readdirSync(postsDirectory)\n  \n    // Returns an array that looks like this:\n    // [\n    //   {\n    //     params: {\n    //       id: 'ssg-ssr'\n    //     }\n    //   },\n    //   {\n    //     params: {\n    //       id: 'pre-rendering'\n    //     }\n    //   }\n    // ]\n\n    return fileNames.map(fileName => {\n        const id = fileName.replace(/\\.md$/, '')\n        const fullPath = path.join(postsDirectory, `${id}.md`)\n        const fileContents = fs.readFileSync(fullPath, 'utf8')\n        const matterResult = matter(fileContents)\n\n        return {\n            params: {\n                id,\n                ...matterResult.data\n            }\n        }\n    })\n  }\n\nexport async function getPostData(id) {\n    const fullPath = path.join(postsDirectory, `${id}.md`)\n    const fileContents = fs.readFileSync(fullPath, 'utf8')\n\n    // Use gray-matter to parse the post metadata section\n    const matterResult = matter(fileContents)\n\n    // Use remark to convert markdown into HTML string\n    const processedContent = await remark()\n        .use(html)\n        .process(matterResult.content)\n    const contentHtml = processedContent.toString()\n\n    // Combine the data with the id\n    return {\n        id,\n        contentHtml,\n        ...matterResult.data\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AANA;AAAA;AACA;AADA;AAQA;AAGA;AACA;AAZA;AAeA;AACA;AAhBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}